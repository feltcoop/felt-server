// generated by src/lib/server/servicesMeta.gen.ts

import type {AnySchema} from 'ajv';

// this module is a client-friendly subset of data from '$lib/server/services.ts'

interface ServiceMeta {
	name: string;
	paramsSchema: AnySchema;
	responseSchema: AnySchema;
}

export const create_persona: ServiceMeta = {
	name: 'create_persona',
	paramsSchema: {
		$id: 'CreatePersonaServiceParams',
		additionalProperties: false,
		type: 'object',
		properties: {name: {type: 'string'}},
		required: ['name'],
	},
	responseSchema: {
		$id: 'CreatePersonaServiceResponse',
		additionalProperties: false,
		type: 'object',
		properties: {
			persona: {
				$id: 'Persona',
				additionalProperties: false,
				type: 'object',
				properties: {
					persona_id: {type: 'number'},
					account_id: {type: 'number'},
					name: {type: 'string'},
					community_ids: {type: 'array', items: {type: 'number'}},
				},
				required: ['persona_id', 'account_id', 'name', 'community_ids'],
			},
			community: {
				$id: 'CommunitySchema',
				additionalProperties: true,
				type: 'object',
				properties: {community_id: {type: 'number'}, name: {type: 'string'}},
				required: ['community_id', 'name'],
			},
		},
		required: ['persona', 'community'],
	},
};

export const create_community: ServiceMeta = {
	name: 'create_community',
	paramsSchema: {
		$id: 'CreateCommunityServiceParams',
		additionalProperties: false,
		type: 'object',
		properties: {name: {type: 'string'}, persona_id: {type: 'number'}},
		required: ['name', 'persona_id'],
	},
	responseSchema: {
		$id: 'CreateCommunityServiceResponse',
		additionalProperties: false,
		type: 'object',
		properties: {
			community: {
				$id: 'CommunitySchema',
				additionalProperties: true,
				type: 'object',
				properties: {community_id: {type: 'number'}, name: {type: 'string'}},
				required: ['community_id', 'name'],
			},
		},
		required: ['community'],
	},
};

export const create_membership: ServiceMeta = {
	name: 'create_membership',
	paramsSchema: {
		$id: 'CreateMembershipServiceParams',
		additionalProperties: false,
		type: 'object',
		properties: {persona_id: {type: 'number'}, community_id: {type: 'number'}},
		required: ['persona_id', 'community_id'],
	},
	responseSchema: {
		$id: 'CreateMembershipServiceResponse',
		additionalProperties: false,
		type: 'object',
		properties: {
			membership: {
				$id: 'Membership',
				additionalProperties: false,
				type: 'object',
				properties: {
					persona_id: {type: 'number'},
					community_id: {type: 'number'},
					name: {type: 'string'},
				},
				required: ['persona_id', 'community_id'],
			},
		},
		required: ['membership'],
	},
};

export const create_space: ServiceMeta = {
	name: 'create_space',
	paramsSchema: {
		$id: 'CreateSpaceServiceSchema',
		additionalProperties: false,
		type: 'object',
		properties: {
			community_id: {type: 'number'},
			name: {type: 'string'},
			url: {type: 'string'},
			media_type: {type: 'string'},
			content: {type: 'string'},
		},
		required: ['community_id', 'name', 'url', 'media_type', 'content'],
	},
	responseSchema: {
		$id: 'CreateSpaceServiceResponse',
		additionalProperties: false,
		type: 'object',
		properties: {
			space: {
				$id: 'Space',
				additionalProperties: false,
				type: 'object',
				properties: {
					space_id: {type: 'number'},
					name: {type: 'string'},
					url: {type: 'string'},
					media_type: {type: 'string'},
					content: {type: 'string'},
				},
				required: ['space_id', 'name', 'url', 'media_type', 'content'],
			},
		},
		required: ['space'],
	},
};

export const create_file: ServiceMeta = {
	name: 'create_file',
	paramsSchema: {
		$id: 'CreateFileServiceParams',
		additionalProperties: false,
		type: 'object',
		properties: {actor_id: {type: 'number'}, space_id: {type: 'number'}, content: {type: 'string'}},
		required: ['actor_id', 'space_id', 'content'],
	},
	responseSchema: {
		$id: 'CreateFileServiceResponse',
		additionalProperties: false,
		type: 'object',
		properties: {
			file: {
				$id: 'File',
				additionalProperties: false,
				type: 'object',
				properties: {
					file_id: {type: 'number'},
					actor_id: {type: 'number'},
					space_id: {type: 'number'},
					content: {type: 'string'},
				},
				required: ['file_id', 'actor_id', 'space_id', 'content'],
			},
		},
		required: ['file'],
	},
};

export const read_community: ServiceMeta = {
	name: 'read_community',
	paramsSchema: {
		$id: 'ReadCommunityServiceParams',
		additionalProperties: false,
		type: 'object',
		properties: {community_id: {type: 'number'}},
		required: ['community_id'],
	},
	responseSchema: {
		$id: 'ReadCommunityServiceResponse',
		additionalProperties: false,
		type: 'object',
		properties: {
			community: {
				$id: 'CommunitySchema',
				additionalProperties: true,
				type: 'object',
				properties: {community_id: {type: 'number'}, name: {type: 'string'}},
				required: ['community_id', 'name'],
			},
		},
		required: ['community'],
	},
};

export const read_communities: ServiceMeta = {
	name: 'read_communities',
	paramsSchema: {
		$id: 'ReadCommunitiesServiceParams',
		additionalProperties: false,
		type: 'object',
		properties: {},
	},
	responseSchema: {
		$id: 'ReadCommunitiesServiceResponse',
		additionalProperties: false,
		type: 'object',
		properties: {
			communities: {
				type: 'array',
				items: {
					$id: 'CommunitySchema',
					additionalProperties: true,
					type: 'object',
					properties: {community_id: {type: 'number'}, name: {type: 'string'}},
					required: ['community_id', 'name'],
				},
			},
		},
		required: ['communities'],
	},
};

export const read_space: ServiceMeta = {
	name: 'read_space',
	paramsSchema: {
		$id: 'ReadSpaceServiceParams',
		additionalProperties: false,
		type: 'object',
		properties: {space_id: {type: 'number'}},
		required: ['space_id'],
	},
	responseSchema: {
		$id: 'ReadSpaceServiceResponse',
		additionalProperties: false,
		type: 'object',
		properties: {
			space: {
				$id: 'Space',
				additionalProperties: false,
				type: 'object',
				properties: {
					space_id: {type: 'number'},
					name: {type: 'string'},
					url: {type: 'string'},
					media_type: {type: 'string'},
					content: {type: 'string'},
				},
				required: ['space_id', 'name', 'url', 'media_type', 'content'],
			},
		},
		required: ['space'],
	},
};

export const read_spaces: ServiceMeta = {
	name: 'read_spaces',
	paramsSchema: {
		$id: 'ReadSpacesServiceSchema',
		additionalProperties: false,
		type: 'object',
		properties: {community_id: {type: 'number'}},
		required: ['community_id'],
	},
	responseSchema: {
		$id: 'ReadSpacesServiceResponse',
		additionalProperties: false,
		type: 'object',
		properties: {
			spaces: {
				type: 'array',
				items: {
					$id: 'Space',
					additionalProperties: false,
					type: 'object',
					properties: {
						space_id: {type: 'number'},
						name: {type: 'string'},
						url: {type: 'string'},
						media_type: {type: 'string'},
						content: {type: 'string'},
					},
					required: ['space_id', 'name', 'url', 'media_type', 'content'],
				},
			},
		},
		required: ['spaces'],
	},
};

export const read_files: ServiceMeta = {
	name: 'read_files',
	paramsSchema: {
		$id: 'ReadFilesServiceParams',
		additionalProperties: false,
		type: 'object',
		properties: {space_id: {type: 'number'}},
		required: ['space_id'],
	},
	responseSchema: {
		$id: 'ReadFilesServiceResponse',
		additionalProperties: false,
		type: 'object',
		properties: {
			files: {
				type: 'array',
				items: {
					$id: 'File',
					additionalProperties: false,
					type: 'object',
					properties: {
						file_id: {type: 'number'},
						actor_id: {type: 'number'},
						space_id: {type: 'number'},
						content: {type: 'string'},
					},
					required: ['file_id', 'actor_id', 'space_id', 'content'],
				},
			},
		},
		required: ['files'],
	},
};
