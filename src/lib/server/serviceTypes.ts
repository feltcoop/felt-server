// generated by src/lib/server/serviceTypes.gen.ts

import type {SvelteComponent} from 'svelte';
import type {Readable} from 'svelte/store';

import type {ApiResult} from '$lib/server/api';
import type {Community} from '$lib/vocab/community/community';
import type {Persona, AccountPersona} from '$lib/vocab/persona/persona';
import type {Membership} from '$lib/vocab/membership/membership';
import type {Space} from '$lib/vocab/space/space';
import type {Entity} from '$lib/vocab/entity/entity';
import type {Tie} from '$lib/vocab/tie/tie';
import type {EntityData} from '$lib/vocab/entity/entityData';
import type {DispatchContext} from '$lib/app/dispatch';

/* eslint-disable @typescript-eslint/no-empty-interface, @typescript-eslint/array-type */

export interface ServicesByName {
	Ping: Service<PingParams, PingResponseResult>;
	LoginAccount: Service<LoginAccountParams, LoginAccountResponseResult>;
	LogoutAccount: Service<LogoutAccountParams, LogoutAccountResponseResult>;
	CreateAccountPersona: Service<CreateAccountPersonaParams, CreateAccountPersonaResponseResult>;
	ReadPersona: Service<ReadPersonaParams, ReadPersonaResponseResult>;
	CreateCommunity: Service<CreateCommunityParams, CreateCommunityResponseResult>;
	CreateMembership: Service<CreateMembershipParams, CreateMembershipResponseResult>;
	DeleteMembership: Service<DeleteMembershipParams, DeleteMembershipResponseResult>;
	CreateSpace: Service<CreateSpaceParams, CreateSpaceResponseResult>;
	CreateEntity: Service<CreateEntityParams, CreateEntityResponseResult>;
	UpdateEntity: Service<UpdateEntityParams, UpdateEntityResponseResult>;
	EraseEntity: Service<EraseEntityParams, EraseEntityResponseResult>;
	DeleteEntities: Service<DeleteEntitiesParams, DeleteEntitiesResponseResult>;
	ReadCommunity: Service<ReadCommunityParams, ReadCommunityResponseResult>;
	ReadCommunities: Service<ReadCommunitiesParams, ReadCommunitiesResponseResult>;
	UpdateCommunitySettings: Service<
		UpdateCommunitySettingsParams,
		UpdateCommunitySettingsResponseResult
	>;
	DeleteCommunity: Service<DeleteCommunityParams, DeleteCommunityResponseResult>;
	ReadSpace: Service<ReadSpaceParams, ReadSpaceResponseResult>;
	ReadSpaces: Service<ReadSpacesParams, ReadSpacesResponseResult>;
	ReadEntities: Service<ReadEntitiesParams, ReadEntitiesResponseResult>;
	ReadEntitiesPaginated: Service<ReadEntitiesPaginatedParams, ReadEntitiesPaginatedResponseResult>;
	UpdateSpace: Service<UpdateSpaceParams, UpdateSpaceResponseResult>;
	DeleteSpace: Service<DeleteSpaceParams, DeleteSpaceResponseResult>;
	CreateTie: Service<CreateTieParams, CreateTieResponseResult>;
	ReadTies: Service<ReadTiesParams, ReadTiesResponseResult>;
	DeleteTie: Service<DeleteTieParams, DeleteTieResponseResult>;
}

// generated by src/lib/server/serviceTypes.gen.ts
